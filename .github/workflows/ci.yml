name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.0', '8.1', '8.2', '8.3']
        include:
          - php-version: '8.0'
            phpunit-version: '^9.4'
          - php-version: '8.1'
            phpunit-version: '^9.4'
          - php-version: '8.2'
            phpunit-version: '^9.4'
          - php-version: '8.3'
            phpunit-version: '^9.4'

    name: PHP ${{ matrix.php-version }} Test

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: sysvsem, sysvshm, pcntl
        coverage: xdebug
        tools: composer:v2

    - name: Validate composer.json
      run: composer validate --no-check-lock --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Install dependencies
      run: |
        # Remove lock file to allow installation of compatible versions for each PHP version
        rm -f composer.lock
        composer install --prefer-dist --no-progress

    - name: Run test suite
      run: |
        echo "Running tests on PHP ${{ matrix.php-version }}"
        composer run-script test

    - name: Run tests with coverage
      run: |
        echo "Generating coverage report for PHP ${{ matrix.php-version }}"
        vendor/bin/phpunit --coverage-clover=coverage-${{ matrix.php-version }}.xml --coverage-text

    - name: Archive coverage results
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-php-${{ matrix.php-version }}
        path: coverage-${{ matrix.php-version }}.xml

  coverage-summary:
    runs-on: ubuntu-latest
    needs: test
    name: Coverage Summary
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: sysvsem, sysvshm, pcntl
        coverage: xdebug
        tools: composer:v2
    
    - name: Install dependencies
      run: |
        rm -f composer.lock
        composer install --prefer-dist --no-progress
    
    - name: Generate HTML coverage report
      run: |
        vendor/bin/phpunit --coverage-html coverage-html --coverage-clover=coverage-summary.xml
    
    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html-report
        path: coverage-html/

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: sysvsem, sysvshm, pcntl
        tools: composer:v2

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.1-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.1-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Check PHP syntax
      run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;

    - name: Run PHPStan (if available)
      run: |
        if [ -f vendor/bin/phpstan ]; then
          vendor/bin/phpstan analyse --no-progress
        else
          echo "PHPStan not installed, skipping static analysis"
        fi
      continue-on-error: true
